Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
                              main.o (__divmodsi4)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(ltoa.o)
                              main.o (ltoa)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(ltoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

vol_str             0x32              main.o
two                 0x1               main.o
temptarget          0x4               main.o
one                 0x1               main.o
tempvol             0x4               main.o
target_str          0x32              main.o
three               0x1               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x6b8
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000026       0x72 main.o
                0x0000000000000098                . = ALIGN (0x2)
                0x0000000000000098                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000098        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000098                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000098                __ctors_start = .
 *(.ctors)
                0x0000000000000098                __ctors_end = .
                0x0000000000000098                __dtors_start = .
 *(.dtors)
                0x0000000000000098                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000098        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000098                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000098        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000a4       0x16 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                0x00000000000000a4                __do_copy_data
 .init4         0x00000000000000ba       0x10 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000ba                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000ca        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000000000000ce        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x00000000000000ce                __vector_1
                0x00000000000000ce                __bad_interrupt
                0x00000000000000ce                __vector_6
                0x00000000000000ce                __vector_3
                0x00000000000000ce                __vector_13
                0x00000000000000ce                __vector_17
                0x00000000000000ce                __vector_7
                0x00000000000000ce                __vector_5
                0x00000000000000ce                __vector_4
                0x00000000000000ce                __vector_9
                0x00000000000000ce                __vector_2
                0x00000000000000ce                __vector_15
                0x00000000000000ce                __vector_8
                0x00000000000000ce                __vector_14
                0x00000000000000ce                __vector_10
                0x00000000000000ce                __vector_16
                0x00000000000000ce                __vector_18
 .text          0x00000000000000d0      0x38e main.o
                0x00000000000000d0                __vector_11
                0x0000000000000128                __vector_12
                0x0000000000000172                uart_getc
                0x00000000000001a4                uart_putc
                0x00000000000001c6                uart_puts
                0x00000000000001dc                uart_init
                0x0000000000000208                uart_puts_p
                0x0000000000000224                rotate
                0x000000000000029c                automat
                0x000000000000039e                echo_vol
 .text          0x000000000000045e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
 .text          0x000000000000045e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
 .text          0x000000000000045e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text          0x000000000000045e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000045e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x000000000000045e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text          0x000000000000045e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(ltoa.o)
 .text          0x000000000000045e        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x000000000000045e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000045e      0x156 main.o
                0x000000000000045e                main
 .text.libgcc.mul
                0x00000000000005b4        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x00000000000005b4       0x28 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
                0x00000000000005b4                __divmodsi4
 .text.libgcc   0x00000000000005dc        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x00000000000005dc        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x00000000000005dc        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x00000000000005dc        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x00000000000005dc        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x00000000000005dc        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x00000000000005dc       0x10 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
                0x00000000000005dc                __negsi2
 .text.libgcc   0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000005ec        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x00000000000005ec       0x44 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
                0x00000000000005ec                __udivmodsi4
 .text.libgcc   0x0000000000000630        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000630        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000630        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000630        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000630        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .text.avr-libc
                0x0000000000000630       0x64 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(ltoa.o)
                0x0000000000000630                ltoa
 .text.avr-libc
                0x0000000000000694       0x20 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000694                strrev
                0x00000000000006b4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000006b4        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                0x00000000000006b4                exit
                0x00000000000006b4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000006b4        0x4 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000006b8                _etext = .

.data           0x0000000000800060       0x38 load address 0x00000000000006b8
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x2 main.o
                0x0000000000800060                mode
                0x0000000000800061                last_direction
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(ltoa.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800062        0xf main.o
                0x0000000000800062                clockwise
                0x0000000000800066                FACTOR
                0x0000000000800068                maxsteps
                0x000000000080006c                tsteps
                0x0000000000800070                delay
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800071       0x26 main.o
                                         0x29 (size before relaxing)
 *(.gnu.linkonce.d*)
                0x0000000000800098                . = ALIGN (0x2)
 *fill*         0x0000000000800097        0x1 
                0x0000000000800098                _edata = .
                0x0000000000800098                PROVIDE (__data_end, .)

.bss            0x0000000000800098       0xbe
                0x0000000000800098                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800098        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800098       0x4f main.o
                0x0000000000800098                i
                0x0000000000800099                step
                0x000000000080009a                target
                0x000000000080009e                vol
 .bss           0x00000000008000e7        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
 .bss           0x00000000008000e7        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
 .bss           0x00000000008000e7        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .bss           0x00000000008000e7        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x00000000008000e7        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00000000008000e7        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
 .bss           0x00000000008000e7        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(ltoa.o)
 .bss           0x00000000008000e7        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008000e7       0x6f main.o
                0x00000000008000e7                vol_str
                0x0000000000800119                two
                0x000000000080011a                temptarget
                0x000000000080011e                one
                0x000000000080011f                tempvol
                0x0000000000800123                target_str
                0x0000000000800155                three
                0x0000000000800156                PROVIDE (__bss_end, .)
                0x00000000000006b8                __data_load_start = LOADADDR (.data)
                0x00000000000006f0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800156        0x0
                0x0000000000800156                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800156                PROVIDE (__noinit_end, .)
                0x0000000000800156                _end = .
                0x0000000000800156                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0xa38
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc      0x294 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(ltoa.o)
                                        0x2a0 (size before relaxing)
 .stab          0x0000000000000960       0xd8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                                         0xe4 (size before relaxing)

.stabstr        0x0000000000000000       0xb4
 *(.stabstr)
 .stabstr       0x0000000000000000       0xb4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 main.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x8b3
 *(.debug_info)
 .debug_info    0x0000000000000000      0x8b3 main.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x2b5
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x2b5 main.o

.debug_line     0x0000000000000000      0x16f
 *(.debug_line)
 .debug_line    0x0000000000000000      0x16f main.o

.debug_frame    0x0000000000000000      0x15c
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x15c main.o

.debug_str      0x0000000000000000      0x2a9
 *(.debug_str)
 .debug_str     0x0000000000000000      0x2a9 main.o
                                        0x2f3 (size before relaxing)

.debug_loc      0x0000000000000000      0x451
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x451 main.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x18
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 main.o

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
FACTOR                                            main.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
__divmodsi4                                       /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
                                                  main.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                                                  main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__negsi2                                          /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_negsi2.o)
                                                  /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__udivmodsi4                                      /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodsi4.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(ltoa.o)
                                                  /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodsi4.o)
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_11                                       main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_12                                       main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
automat                                           main.o
clockwise                                         main.o
delay                                             main.o
echo_vol                                          main.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
i                                                 main.o
last_direction                                    main.o
ltoa                                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(ltoa.o)
                                                  main.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
maxsteps                                          main.o
mode                                              main.o
one                                               main.o
rotate                                            main.o
step                                              main.o
strrev                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(strrev.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a(ltoa.o)
target                                            main.o
target_str                                        main.o
temptarget                                        main.o
tempvol                                           main.o
three                                             main.o
tsteps                                            main.o
two                                               main.o
uart_getc                                         main.o
uart_init                                         main.o
uart_putc                                         main.o
uart_puts                                         main.o
uart_puts_p                                       main.o
vol                                               main.o
vol_str                                           main.o
